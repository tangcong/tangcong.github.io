<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TangCong Blog</title>
    <link>https://tangcong.github.io/</link>
    <description>Recent content on TangCong Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Mar 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://tangcong.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>我的极客时间专栏《etcd实战课》介绍</title>
      <link>https://tangcong.github.io/post/2021-03-02-etcd-practice-course/</link>
      <pubDate>Tue, 02 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/post/2021-03-02-etcd-practice-course/</guid>
      <description>​ 极客时间专栏《etcd实战课》介绍 背景 在过去几个月通过大量周末和凌晨时间的投入，与极客时间合作，推出了《etcd实战课》专栏，结合自己在这</description>
    </item>
    
    <item>
      <title>etcd QoS proposal</title>
      <link>https://tangcong.github.io/post/2020-09-19-etcd-qos-proposal/</link>
      <pubDate>Sat, 19 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/post/2020-09-19-etcd-qos-proposal/</guid>
      <description>etcd QoS Feature Design(draft) status: in progress. create date: 2020-03-30(draft)(tangcong) updated: 2020-09-14, DbUsedBytes optimzed to PercentOfStorageQuotaUsed,thanks piotr tabor. update: 2020-09-16, add related work,thanks joe betz. update: 2020-09-16, add thoughts on decomposing the rules(piotr tabor) update: 2020-09-17,add faq, simplify qos rule(tang cong) update: 2020-09-18,list detailed Goals/Non-Goals/Future Goals.(tang cong) Background As the metadata storage of kubernetes, etcd, stability is extremely important. However, at present, etcd will consume a lot of CPU, memory,</description>
    </item>
    
    <item>
      <title>万级k8s集群背后的etcd稳定性与性能优化实践</title>
      <link>https://tangcong.github.io/post/2020-07-05-etcd-stability-and-performance-optimization-practices/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/post/2020-07-05-etcd-stability-and-performance-optimization-practices/</guid>
      <description>​ 万级k8s集群背后的etcd稳定性与性能优化实践 背景 本文介绍了TKE容器团队在万级k8s集群和内部其他业务场景下遇到的一系列etcd问题，</description>
    </item>
    
    <item>
      <title>重启etcd可能导致数据不一致BUG分析</title>
      <link>https://tangcong.github.io/post/2020-04-24-etcd-data-inconsistency-bug-analysis/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/post/2020-04-24-etcd-data-inconsistency-bug-analysis/</guid>
      <description>​ 重启etcd可能导致数据不一致BUG分析 背景 近期我们遇到一个严重BUG，开启鉴权后，重启etcd就可能导致数据不一致，根本原因是鉴权相关操</description>
    </item>
    
    <item>
      <title>升级集群导致ETCD数据不一致分析</title>
      <link>https://tangcong.github.io/post/2020-04-19-etcd-upgrading-bug-analysis/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/post/2020-04-19-etcd-upgrading-bug-analysis/</guid>
      <description>​ 升级集群导致ETCD数据不一致/毁坏案例分析 背景 近期我们在测试环境升级ETCD集群（3.2升级到3.3)的时候，遇到了一些奇怪现象。当集群</description>
    </item>
    
    <item>
      <title>etcd数据不一致bug分析汇总</title>
      <link>https://tangcong.github.io/post/2020-03-02-etcd-data-incosistency-bug-analysis/</link>
      <pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/post/2020-03-02-etcd-data-incosistency-bug-analysis/</guid>
      <description>etcd数据不一致bug案例分析 简单总结目前几个已知的etcd数据不一致案例,以及相关排查思路，后续持续更新。 mvcc: fix rev inconsistency 确保重启后重建的版本号</description>
    </item>
    
    <item>
      <title>kubernetes best practices</title>
      <link>https://tangcong.github.io/post/2019-03-02-k8s-best-practices/</link>
      <pubDate>Sat, 02 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/post/2019-03-02-k8s-best-practices/</guid>
      <description>背景 2013年docker横空出世，正如其口号build,ship,run,其创新地提出将程序运行环境依赖打包为镜像,解决程序部署环境依赖、</description>
    </item>
    
    <item>
      <title>k8s-proxy how to work</title>
      <link>https://tangcong.github.io/post/2019-01-13-k8s-proxy-how-to-work/</link>
      <pubDate>Sun, 13 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/post/2019-01-13-k8s-proxy-how-to-work/</guid>
      <description>iptables iptable interface iptables-save iptables-restore ipset-interface util exec interface ipvs ipvs interface dbus</description>
    </item>
    
    <item>
      <title>iptables how to work</title>
      <link>https://tangcong.github.io/post/2019-01-12-iptables-how-to-work/</link>
      <pubDate>Sat, 12 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/post/2019-01-12-iptables-how-to-work/</guid>
      <description>iptables介绍 iptables 初识 iptables 接口 iptables table iptables chain iptables iptables 内核实现之netfilter netfilter 介绍 netfilter is a set of hooks inside the Linux kernel that allows kernel modules to register callback functions with the network stack. A registered callback function is then called back for</description>
    </item>
    
    <item>
      <title>redis/codis troubleshooting总结</title>
      <link>https://tangcong.github.io/post/2018-04-02-redis-codis-troubleshooting/</link>
      <pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/post/2018-04-02-redis-codis-troubleshooting/</guid>
      <description>redis主备同步失败 线上某两实例重新建立主备关系时,出现如下错误 23203:S 02 Apr 14:27:53.148 * MASTER &amp;lt;-&amp;gt; SLAVE sync started 23203:S 02 Apr 14:27:53.148 * Non blocking connect for SYNC fired the event. 23203:S 02 Apr 14:27:53.148 * Master replied to PING, replication can continue... 23203:S 02</description>
    </item>
    
    <item>
      <title>大规模codis 集群的治理与实践</title>
      <link>https://tangcong.github.io/post/2017-11-01-the-practices-and-challenges-of-large-scale-codis-system/</link>
      <pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/post/2017-11-01-the-practices-and-challenges-of-large-scale-codis-system/</guid>
      <description>为什么选型codis作为我们分布式缓存服务? 我们是如何打造codis平台的? codis数据迁移流程和原理是怎样的？ 如何保证codis服务高可</description>
    </item>
    
    <item>
      <title>LRU算法常见实现方法解析</title>
      <link>https://tangcong.github.io/post/2017-05-10-dive-into-the-lru-algorithm/</link>
      <pubDate>Wed, 10 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/post/2017-05-10-dive-into-the-lru-algorithm/</guid>
      <description>LRU算法基本介绍 LRU算法标准实现 Leveldb LRU算法实现 Redis LRU算法实现 Linux Page Cache LRU算法实现</description>
    </item>
    
    <item>
      <title>深入理解zookeeper(原理篇)</title>
      <link>https://tangcong.github.io/post/2016-11-08-dive-into-zookeeper-principle/</link>
      <pubDate>Tue, 08 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/post/2016-11-08-dive-into-zookeeper-principle/</guid>
      <description>zab raft paxos 总结</description>
    </item>
    
    <item>
      <title>深入理解zookeeper(实践总结篇)</title>
      <link>https://tangcong.github.io/post/2016-10-07-dive-into-zookeeper-practices/</link>
      <pubDate>Fri, 07 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/post/2016-10-07-dive-into-zookeeper-practices/</guid>
      <description>配置系统 分布式锁 名称服务 zookeeper性能优化 zookeeper监控及troubleshooting troubleshooting(zookeeper c api bug) 问题背景 我们团队主要开发语言</description>
    </item>
    
    <item>
      <title>深入理解zookeeper(工程实现篇)</title>
      <link>https://tangcong.github.io/post/2016-09-18-dive-into-zookeeper-implementation/</link>
      <pubDate>Sun, 18 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/post/2016-09-18-dive-into-zookeeper-implementation/</guid>
      <description>zookeeper概况 背景&amp;amp;问题 在生产环境中，为了提高服务可用性、支撑更多的用户量等,分布式应用服务都会在不同IDC多个节点上部署，</description>
    </item>
    
    <item>
      <title>Welcome to TangCong Blog</title>
      <link>https://tangcong.github.io/2016/09/11/hello-world/</link>
      <pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/2016/09/11/hello-world/</guid>
      <description>“Yeah It&amp;rsquo;s on. ” Hello World!</description>
    </item>
    
    <item>
      <title>大规模排行榜系统实践及挑战</title>
      <link>https://tangcong.github.io/post/2016-09-11-the-practices-and-challenges-of-large-scale-ranking-system/</link>
      <pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/post/2016-09-11-the-practices-and-challenges-of-large-scale-ranking-system/</guid>
      <description>如何支持业务就近接入？低延时? 如何支撑数万乃至百万级排行榜申请? 如何降低机器成本？选择合适存储引擎？ 如何避免各业务资源抢占，相互影响？ 原文发</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tangcong.github.io/search/placeholder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/search/placeholder/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://tangcong.github.io/top/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/top/about/</guid>
      <description>Tang Cong is an software developer.
Feel free to connect TangCong via Github (https://github.com/tangcong) or drop him an email (tangcong506@gmail.com).
Talks </description>
    </item>
    
    <item>
      <title></title>
      <link>https://tangcong.github.io/top/books/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tangcong.github.io/top/books/</guid>
      <description>书籍 极客时间《etcd实战课》专栏</description>
    </item>
    
  </channel>
</rss>